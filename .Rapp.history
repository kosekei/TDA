g0
g1
89/20
rm(list=ls())#
#
library(TDA)#
library(ggplot2)#
library(ggExtra)#
library(MASS)#
library(dplyr)#
library(tidyr)#
library(viridis)#
library(akima)#
library(gridExtra)#
#
filename0 <- "~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/0dim_all.txt"#
filename1 <- "~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/1dim_all.txt"
D_zero <- read.table(filename0, sep="\t",header=T)
head(D_zero)
D_one <- read.table(filename1, sep="\t",header=T)
g0 <- ggplot() + geom_point(data=D_zero , aes(x=midlife, y=lifetime), size=3) + #
 #scale_color_distiller(palette='Spectral', limits = c(0,5)) +#
  labs(x="midlife", y="lifetime") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=16, family="Arial"))#
g1 <- ggplot() + geom_point(data=D_one , aes(x=midlife, y=lifetime), size=3) + #
 #scale_color_distiller(palette='Spectral', limits = c(0,5)) +#
  labs(x="midlife", y="lifetime") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=16, family="Arial"))
g0
g1
g0
g1
g0
g1
g0
g1
quartz(type="pdf", file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/0dim_all.pdf")#
g0#
dev.off()#
#
quartz(type="pdf", file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/1dim_all.pdf")#
g1#
dev.off()
D_zero
D_zero$birth <- (D_zero$midlife * 2 - D_zero$lifetime)/2#
D_zero$death <- (D_zero$midlife * 2 + D_zero$lifetime)/2
filename0 <- "~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/0dim_all.txt"#
filename1 <- "~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/1dim_all.txt"#
#
D_zero <- read.table(filename0, sep="\t",header=T)#
D_zero$birth <- (D_zero$midlife * 2 - D_zero$lifetime)/2#
D_zero$death <- (D_zero$midlife * 2 + D_zero$lifetime)/2#
#
D_one <- read.table(filename1, sep="\t",header=T)#
D_one$birth <- (D_one$midlife * 2 - D_one$lifetime)/2#
D_one$death <- (D_one$midlife * 2 + D_one$lifetime)/2
g0_2 <- ggplot() + geom_point(data=D_zero , aes(x=birth, y=death), size=3) + #
 #scale_color_distiller(palette='Spectral', limits = c(0,5)) +#
  labs(x="midlife", y="lifetime") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=16, family="Arial"))#
g1_2 <- ggplot() + geom_point(data=D_one , aes(x=birth, y=death), size=3) + #
 #scale_color_distiller(palette='Spectral', limits = c(0,5)) +#
  labs(x="midlife", y="lifetime") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=16, family="Arial"))
g0_2
g1_2
g0_2 <- ggplot() + geom_point(data=D_zero , aes(x=birth, y=death), size=3) + #
 #scale_color_distiller(palette='Spectral', limits = c(0,5)) +#
  labs(x="Birth", y="Death") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=16, family="Arial"))#
g1_2 <- ggplot() + geom_point(data=D_one , aes(x=birth, y=death), size=3) + #
 #scale_color_distiller(palette='Spectral', limits = c(0,5)) +#
  labs(x="Birth", y="Death") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=16, family="Arial"))
g1_2
g0_2
g1_2
quartz(type="pdf", file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/0dim_bd_all.pdf")#
g0_2#
dev.off()#
#
quartz(type="pdf", file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/1dim_bd_all.pdf")#
g1_2#
dev.off()
library(ggplot2)#
library(ggExtra)#
library(MASS)#
library(dplyr)#
library(tidyr)#
library(TDA)#
library(viridis)#
library(akima)#
library(caret)#
#
df = read.table("~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/homcloud_bw/variable_importance_grid.txt", header=F)#
#
name <- as.character(df[,1])#
d <- strsplit(name,"_")#
df1 <- data.frame()#
for(i in 1:length(d)){#
	row <- d[[i]]#
  row2 <- as.data.frame(row)#
  df1 <- rbind(df1,t(row2))#
}#
rownames(df1) <- 1:nrow(df1)#
df2 <- cbind(df1,df[,2])#
colnames(df2) <- c("dim","midlife","lifetime","importance")#
df2$importance <- log(df2$importance)
df2
head(df2)
cutoff <- function(x){#
  if (x < -10){#
    return(-10)#
  } else {#
    return(x)#
  }#
}#
df2$importance <- mapply(df2$importance, FUN=cutoff)#
#
df2$midlife <- as.numeric(as.character(df2$midlife))+1#
df2$lifetime <- as.numeric(as.character(df2$lifetime))
head(df2)
-156.5 + 8.125 * 19
df_dim0 <- df2[df2["dim"]=="comp",]#
for (i in 1:20){#
	df_dim0$midlife[df_dim0$midlife==i] <- -156.5 + 8.125 * (i-1)#
	df_dim0$lifetime[df_dim0$lifetime==i] <- 4.45 * (i-1)#
}#
#
df_dim1 <- df2[df2["dim"]=="hole",]#
for (i in 1:20){#
	df_dim1$midlife[df_dim1$midlife==i] <- -16 + 2.175 * (i-1)#
	df_dim1$lifetime[df_dim1$lifetime==(21-i)] <- 1.8 * (20-i)#
}
head(df_dim0)
df_dim0
df = read.table("~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/homcloud_bw/variable_importance_grid.txt", header=F)#
#
name <- as.character(df[,1])#
d <- strsplit(name,"_")#
df1 <- data.frame()#
for(i in 1:length(d)){#
	row <- d[[i]]#
  row2 <- as.data.frame(row)#
  df1 <- rbind(df1,t(row2))#
}#
rownames(df1) <- 1:nrow(df1)#
df2 <- cbind(df1,df[,2])#
colnames(df2) <- c("dim","midlife","lifetime","importance")#
df2$importance <- log(df2$importance)#
#
cutoff <- function(x){#
  if (x < -10){#
    return(-10)#
  } else {#
    return(x)#
  }#
}#
#df2$importance <- mapply(df2$importance, FUN=cutoff)#
#
df2$midlife <- as.numeric(as.character(df2$midlife))+1#
df2$lifetime <- as.numeric(as.character(df2$lifetime))#
#
df_dim0 <- df2[df2["dim"]=="comp",]#
for (i in 1:20){#
	df_dim0$midlife[df_dim0$midlife==i] <- -156.5 + 8.125 * (i-1)#
	df_dim0$lifetime[df_dim0$lifetime==i] <- 4.45 * (i-1)#
}#
#
df_dim1 <- df2[df2["dim"]=="hole",]#
for (i in 1:20){#
	df_dim1$midlife[df_dim1$midlife==i] <- -16 + 2.175 * (i-1)#
	df_dim1$lifetime[df_dim1$lifetime==(21-i)] <- 1.8 * (20-i)#
}
df_dim0
write.table(df_dim0,file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/important_region_dim0.txt",sep="\t",quote=FALSE)
?write.table
write.table(df_dim0,file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/important_region_dim0.txt",sep="\t",quote=FALSE, row.names = F)
write.table(df_dim1,file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/important_region_dim1.txt",sep="\t",quote=FALSE, row.names = F)
head(df2)
head(df_dim0)
library(ggplot2)#
library(ggExtra)#
library(MASS)#
library(dplyr)#
library(tidyr)#
library(TDA)#
library(viridis)#
library(akima)#
library(caret)#
#
df = read.table("~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/homcloud_bw/variable_importance_grid.txt", header=F)#
#
name <- as.character(df[,1])#
d <- strsplit(name,"_")#
df1 <- data.frame()#
for(i in 1:length(d)){#
	row <- d[[i]]#
  row2 <- as.data.frame(row)#
  df1 <- rbind(df1,t(row2))#
}#
rownames(df1) <- 1:nrow(df1)#
df2 <- cbind(df1,df[,2])#
colnames(df2) <- c("dim","midlife","lifetime","importance")#
df2$importance <- log(df2$importance)#
#
cutoff <- function(x){#
  if (x < -10){#
    return(-10)#
  } else {#
    return(x)#
  }#
}#
#df2$importance <- mapply(df2$importance, FUN=cutoff)#
#
df2$midlife <- as.numeric(as.character(df2$midlife))+1#
df2$lifetime <- as.numeric(as.character(df2$lifetime))
df2$importance <- mapply(df2$importance, FUN=cutoff)
df_dim0 <- df2[df2["dim"]=="comp",]#
for (i in 1:20){#
	df_dim0$midlife[df_dim0$midlife==i] <- -156.5 + 8.125 * (i-1)#
	df_dim0$lifetime[df_dim0$lifetime==i] <- 4.45 * (i-1)#
}
df_dim1 <- df2[df2["dim"]=="hole",]#
for (i in 1:20){#
	df_dim1$midlife[df_dim1$midlife==i] <- -16 + 2.175 * (i-1)#
	df_dim1$lifetime[df_dim1$lifetime==(21-i)] <- 1.8 * (20-i)#
}
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(0,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,-2.6))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
df_dim0
g0
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(0,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral')+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(0,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,-2))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(0,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,0))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 20.0) + ylim(0,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,-2.6))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(0,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,10))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
df_dim0
head(df_dim0)
df_dim0[1,4]
df_dim0[2,4]
df_dim0[2,4]<- -2.663585
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(0,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,-2.6))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
df_dim0 <- df2[df2["dim"]=="comp",]#
for (i in 1:20){#
	df_dim0$midlife[df_dim0$midlife==i] <- -156.5 + 8.125 * (i-1)#
	df_dim0$lifetime[df_dim0$lifetime==i] <- 4.45 * (i-1)#
}
df_dim0
head(df_dim0)
df_dim0[1,4]
df_dim0[1,4] <- -2.66
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(0,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,-2.6))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
df_dim0[1,4] <- 5
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(0,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,-2.6))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
df_dim0[1,4] <- 100
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(0,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral')+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
head(df_dim0)
df_dim0 <- df2[df2["dim"]=="comp",]#
for (i in 1:20){#
	df_dim0$midlife[df_dim0$midlife==i] <- -156.5 + 8.125 * (i-1)#
	df_dim0$lifetime[df_dim0$lifetime==i] <- 4.45 * (i-1)#
}
head(df_dim0)
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(-1,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,-2.6))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(-10,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,-2.6))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(-10,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-5,-2.6))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(-5,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,-2.6))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
g1 <- ggplot(df_dim1, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-16, 27.5) + ylim(0,36)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,-2.6))+#
labs(title="Importance of 1-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g1
g1 <- ggplot(df_dim1, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-16, 27.5) + ylim(-5,36)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,-2.6))+#
labs(title="Importance of 1-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g1
g1 <- ggplot(df_dim1, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-16, 27.5) + ylim(0,36)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,-2.6))+#
labs(title="Importance of 1-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g1
g1 <- ggplot(df_dim1, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-16, 27.5) + ylim(-2,36)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,-2.6))+#
labs(title="Importance of 1-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g1
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(-5,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-10,-2.6))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))
g0
library(ggplot2)#
library(ggExtra)#
library(MASS)#
library(dplyr)#
library(tidyr)#
library(TDA)#
library(viridis)#
library(akima)#
library(caret)#
#
df = read.table("~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/homcloud_bw/variable_importance_grid.txt", header=F)#
#
name <- as.character(df[,1])#
d <- strsplit(name,"_")#
df1 <- data.frame()#
for(i in 1:length(d)){#
	row <- d[[i]]#
  row2 <- as.data.frame(row)#
  df1 <- rbind(df1,t(row2))#
}#
rownames(df1) <- 1:nrow(df1)#
df2 <- cbind(df1,df[,2])#
colnames(df2) <- c("dim","midlife","lifetime","importance")#
df2$importance <- log(df2$importance)#
#
cutoff <- function(x){#
  if (x < -15){#
    return(-15)#
  } else {#
    return(x)#
  }#
}#
df2$importance <- mapply(df2$importance, FUN=cutoff)#
#
df2$midlife <- as.numeric(as.character(df2$midlife))+1#
df2$lifetime <- as.numeric(as.character(df2$lifetime))#
#
df_dim0 <- df2[df2["dim"]=="comp",]#
for (i in 1:20){#
	df_dim0$midlife[df_dim0$midlife==i] <- -156.5 + 8.125 * (i-1)#
	df_dim0$lifetime[df_dim0$lifetime==i] <- 4.45 * (i-1)#
}#
#write.table(df_dim0,file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/important_region_dim0.txt",sep="\t",quote=FALSE, row.names = F)#
#
df_dim1 <- df2[df2["dim"]=="hole",]#
for (i in 1:20){#
	df_dim1$midlife[df_dim1$midlife==i] <- -16 + 2.175 * (i-1)#
	df_dim1$lifetime[df_dim1$lifetime==(21-i)] <- 1.8 * (20-i)#
}#
#write.table(df_dim1,file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/important_region_dim1.txt",sep="\t",quote=FALSE, row.names = F)#
#
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(-5,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-15,-2.6))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))#
quartz(type="pdf", file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/0dim_importance.pdf")#
g0#
dev.off()#
#
g1 <- ggplot(df_dim1, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-16, 27.5) + ylim(-2,36)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-15,-2.6))+#
labs(title="Importance of 1-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))#
quartz(type="pdf", file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/1dim_importance.pdf")#
g1#
dev.off()
rm(list=ls())#
#
library(caret)#
library(ggplot2)#
library(dplyr)#
#
obs_pred4 <- read.table("/~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/moisture/obs_pred_binary_3_5_spread1_PCA_corneo.txt",header=T)#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="0", replacement = "M")#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="1", replacement = "F")#
dA <- obs_pred4[obs_pred4$ID=="D-051" & obs_pred4$season=="S",]#
dB <- obs_pred4[obs_pred4$ID=="D-055" & obs_pred4$season=="S",]#
dC <- obs_pred4[obs_pred4$ID=="D-110" & obs_pred4$season=="S",]#
dD <- obs_pred4[obs_pred4$ID=="D-096" & obs_pred4$season=="W",]#
dE <- obs_pred4[obs_pred4$ID=="D-022" & obs_pred4$season=="S",]#
dF <- obs_pred4[obs_pred4$ID=="A-076" & obs_pred4$season=="W",]#
d1 <- rbind(dA, dB, dC, dD, dE, dF)#
d1$sym <- c("A", "B", "C", "D", "E", "F")#
g <- ggplot() + #
  geom_point(data=obs_pred4 , aes(x=pred, y=obs, color=sex), size=2) +#
  xlim(0,35) + ylim(0,35) +#
  labs(title="",x="Predicted TEWL", y="Observed TEWL") +#
#  scale_color_hue(name = "Location", labels = c(A = "Akita", T ="Tokyo"), guide=TRUE ) +#
 scale_color_hue(name = "sex", labels = c(F = "F", M ="M")) +#
#  scale_shape_discrete(name = "Sex", labels = c( W ="Female",M = "Male"), guide=guide_legend(reverse=TRUE) ) +#
#  scale_shape_discrete(name = "Season", labels = c(S="S", W="W" ), guide=TRUE ) +#
#  scale_shape_discrete(name = "Location", labels = c(A = "Akita", T ="Tokyo")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=25, family="Arial")) +#
  geom_abline(intercept=0,slope=1)　+ coord_fixed(ratio=1)#
g2 <-g + geom_text(data=d1 , aes(x=pred, y=obs, label=sym), size=6)
rm(list=ls())#
#
library(caret)#
library(ggplot2)#
library(dplyr)#
#
obs_pred4 <- read.table("/~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/moisture/obs_pred_binary_3_5_spread1_PCA_corneo.txt",header=T)#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="0", replacement = "M")#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="1", replacement = "F")
rm(list=ls())#
#
library(caret)#
library(ggplot2)#
library(dplyr)#
#
obs_pred4 <- read.table("~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/moisture/obs_pred_binary_3_5_spread1_PCA_corneo.txt",header=T)#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="0", replacement = "M")#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="1", replacement = "F")#
dA <- obs_pred4[obs_pred4$ID=="D-051" & obs_pred4$season=="S",]#
dB <- obs_pred4[obs_pred4$ID=="D-055" & obs_pred4$season=="S",]#
dC <- obs_pred4[obs_pred4$ID=="D-110" & obs_pred4$season=="S",]#
dD <- obs_pred4[obs_pred4$ID=="D-096" & obs_pred4$season=="W",]#
dE <- obs_pred4[obs_pred4$ID=="D-022" & obs_pred4$season=="S",]#
dF <- obs_pred4[obs_pred4$ID=="A-076" & obs_pred4$season=="W",]#
d1 <- rbind(dA, dB, dC, dD, dE, dF)#
d1$sym <- c("A", "B", "C", "D", "E", "F")#
g <- ggplot() + #
  geom_point(data=obs_pred4 , aes(x=pred, y=obs, color=sex), size=2) +#
  xlim(0,35) + ylim(0,35) +#
  labs(title="",x="Predicted TEWL", y="Observed TEWL") +#
#  scale_color_hue(name = "Location", labels = c(A = "Akita", T ="Tokyo"), guide=TRUE ) +#
 scale_color_hue(name = "sex", labels = c(F = "F", M ="M")) +#
#  scale_shape_discrete(name = "Sex", labels = c( W ="Female",M = "Male"), guide=guide_legend(reverse=TRUE) ) +#
#  scale_shape_discrete(name = "Season", labels = c(S="S", W="W" ), guide=TRUE ) +#
#  scale_shape_discrete(name = "Location", labels = c(A = "Akita", T ="Tokyo")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=25, family="Arial")) +#
  geom_abline(intercept=0,slope=1)　+ coord_fixed(ratio=1)#
g2 <-g + geom_text(data=d1 , aes(x=pred, y=obs, label=sym), size=6)
g2
g <- ggplot() + #
  geom_point(data=obs_pred4 , aes(x=pred, y=obs, color=sex), size=2) +#
#  xlim(0,35) + ylim(0,35) +#
  labs(title="",x="Predicted TEWL", y="Observed TEWL") +#
#  scale_color_hue(name = "Location", labels = c(A = "Akita", T ="Tokyo"), guide=TRUE ) +#
 scale_color_hue(name = "sex", labels = c(F = "F", M ="M")) +#
#  scale_shape_discrete(name = "Sex", labels = c( W ="Female",M = "Male"), guide=guide_legend(reverse=TRUE) ) +#
#  scale_shape_discrete(name = "Season", labels = c(S="S", W="W" ), guide=TRUE ) +#
#  scale_shape_discrete(name = "Location", labels = c(A = "Akita", T ="Tokyo")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=25, family="Arial")) +#
  geom_abline(intercept=0,slope=1)　+ coord_fixed(ratio=1)#
g2 <-g + geom_text(data=d1 , aes(x=pred, y=obs, label=sym), size=6)
g2
g <- ggplot() + #
  geom_point(data=obs_pred4 , aes(x=pred, y=obs, color=sex), size=2) +#
  xlim(0,80) + ylim(0,80) +#
  labs(title="",x="Predicted TEWL", y="Observed TEWL") +#
#  scale_color_hue(name = "Location", labels = c(A = "Akita", T ="Tokyo"), guide=TRUE ) +#
 scale_color_hue(name = "sex", labels = c(F = "F", M ="M")) +#
#  scale_shape_discrete(name = "Sex", labels = c( W ="Female",M = "Male"), guide=guide_legend(reverse=TRUE) ) +#
#  scale_shape_discrete(name = "Season", labels = c(S="S", W="W" ), guide=TRUE ) +#
#  scale_shape_discrete(name = "Location", labels = c(A = "Akita", T ="Tokyo")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=25, family="Arial")) +#
  geom_abline(intercept=0,slope=1)　+ coord_fixed(ratio=1)#
g2 <-g + geom_text(data=d1 , aes(x=pred, y=obs, label=sym), size=6)
g2
quartz(type="pdf", file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/moisture/pred_obs_binary_3_5_spread1_PCA_corneo.pdf")#
g2#
dev.off()
g <- ggplot() + #
  geom_point(data=obs_pred4 , aes(x=pred, y=obs, color=sex), size=2) +#
  xlim(0,70) + ylim(0,70) +#
  labs(title="",x="Predicted TEWL", y="Observed TEWL") +#
#  scale_color_hue(name = "Location", labels = c(A = "Akita", T ="Tokyo"), guide=TRUE ) +#
 scale_color_hue(name = "sex", labels = c(F = "F", M ="M")) +#
#  scale_shape_discrete(name = "Sex", labels = c( W ="Female",M = "Male"), guide=guide_legend(reverse=TRUE) ) +#
#  scale_shape_discrete(name = "Season", labels = c(S="S", W="W" ), guide=TRUE ) +#
#  scale_shape_discrete(name = "Location", labels = c(A = "Akita", T ="Tokyo")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=25, family="Arial")) +#
  geom_abline(intercept=0,slope=1)　+ coord_fixed(ratio=1)#
g2 <-g + geom_text(data=d1 , aes(x=pred, y=obs, label=sym), size=6)#
quartz(type="pdf", file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/moisture/pred_obs_binary_3_5_spread1_PCA_corneo.pdf")#
g2#
dev.off()
rm(list=ls())#
#
library(caret)#
library(ggplot2)#
library(dplyr)#
#
obs_pred4 <- read.table("~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/moisture/obs_pred_gray_nowt_spread1_PCA_skicon.txt",header=T)#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="0", replacement = "M")#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="1", replacement = "F")#
dA <- obs_pred4[obs_pred4$ID=="D-051" & obs_pred4$season=="S",]#
dB <- obs_pred4[obs_pred4$ID=="D-055" & obs_pred4$season=="S",]#
dC <- obs_pred4[obs_pred4$ID=="D-110" & obs_pred4$season=="S",]#
dD <- obs_pred4[obs_pred4$ID=="D-096" & obs_pred4$season=="W",]#
dE <- obs_pred4[obs_pred4$ID=="D-022" & obs_pred4$season=="S",]#
dF <- obs_pred4[obs_pred4$ID=="A-076" & obs_pred4$season=="W",]#
d1 <- rbind(dA, dB, dC, dD, dE, dF)#
d1$sym <- c("A", "B", "C", "D", "E", "F")
g <- ggplot() + #
  geom_point(data=obs_pred4 , aes(x=pred, y=obs, color=sex), size=2) +#
#  xlim(0,70) + ylim(0,70) +#
  labs(title="",x="Predicted TEWL", y="Observed TEWL") +#
#  scale_color_hue(name = "Location", labels = c(A = "Akita", T ="Tokyo"), guide=TRUE ) +#
 scale_color_hue(name = "sex", labels = c(F = "F", M ="M")) +#
#  scale_shape_discrete(name = "Sex", labels = c( W ="Female",M = "Male"), guide=guide_legend(reverse=TRUE) ) +#
#  scale_shape_discrete(name = "Season", labels = c(S="S", W="W" ), guide=TRUE ) +#
#  scale_shape_discrete(name = "Location", labels = c(A = "Akita", T ="Tokyo")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=25, family="Arial")) +#
  geom_abline(intercept=0,slope=1)　+ coord_fixed(ratio=1)#
g2 <-g + geom_text(data=d1 , aes(x=pred, y=obs, label=sym), size=6)
g2
g <- ggplot() + #
  geom_point(data=obs_pred4 , aes(x=pred, y=obs, color=sex), size=2) +#
  xlim(0,350) + ylim(0,350) +#
  labs(title="",x="Predicted TEWL", y="Observed TEWL") +#
#  scale_color_hue(name = "Location", labels = c(A = "Akita", T ="Tokyo"), guide=TRUE ) +#
 scale_color_hue(name = "sex", labels = c(F = "F", M ="M")) +#
#  scale_shape_discrete(name = "Sex", labels = c( W ="Female",M = "Male"), guide=guide_legend(reverse=TRUE) ) +#
#  scale_shape_discrete(name = "Season", labels = c(S="S", W="W" ), guide=TRUE ) +#
#  scale_shape_discrete(name = "Location", labels = c(A = "Akita", T ="Tokyo")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=25, family="Arial")) +#
  geom_abline(intercept=0,slope=1)　+ coord_fixed(ratio=1)#
g2 <-g + geom_text(data=d1 , aes(x=pred, y=obs, label=sym), size=6)
g2
quartz(type="pdf", file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/moisture/pred_obs_gray_nowt_spread1_PCA_skicon.pdf")#
g2#
dev.off()
rm(list=ls())#
#
library(caret)#
library(ggplot2)#
library(dplyr)#
#
obs_pred4 <- read.table("data/obs_pred_binary_0_0_spread01_PCA.txt",header=T)#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="0", replacement = "M")#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="1", replacement = "F")#
dA <- obs_pred4[obs_pred4$ID=="D-051" & obs_pred4$season=="S",]#
dB <- obs_pred4[obs_pred4$ID=="D-055" & obs_pred4$season=="S",]#
dC <- obs_pred4[obs_pred4$ID=="D-110" & obs_pred4$season=="S",]#
dD <- obs_pred4[obs_pred4$ID=="D-096" & obs_pred4$season=="W",]#
dE <- obs_pred4[obs_pred4$ID=="D-022" & obs_pred4$season=="S",]#
dF <- obs_pred4[obs_pred4$ID=="A-076" & obs_pred4$season=="W",]#
d1 <- rbind(dA, dB, dC, dD, dE, dF)#
d1$sym <- c("A", "B", "C", "D", "E", "F")
rm(list=ls())#
#
library(caret)#
library(ggplot2)#
library(dplyr)#
#
obs_pred4 <- read.table("data/obs_pred_binary_0_0_spread01_PCA.txt",header=T)#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="0", replacement = "M")#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="1", replacement = "F")#
dA <- obs_pred4[obs_pred4$ID=="D-051" & obs_pred4$season=="S",]#
dB <- obs_pred4[obs_pred4$ID=="D-055" & obs_pred4$season=="S",]#
dC <- obs_pred4[obs_pred4$ID=="D-110" & obs_pred4$season=="S",]#
dD <- obs_pred4[obs_pred4$ID=="D-096" & obs_pred4$season=="W",]#
dE <- obs_pred4[obs_pred4$ID=="D-022" & obs_pred4$season=="S",]#
dF <- obs_pred4[obs_pred4$ID=="A-076" & obs_pred4$season=="W",]#
d1 <- rbind(dA, dB, dC, dD, dE, dF)#
d1$sym <- c("A", "B", "C", "D", "E", "F")
obs_pred4 <- read.table("./data/obs_pred_binary_0_0_spread01_PCA.txt",header=T)
obs_pred4 <- read.table("data/obs_pred_binary_0_0_spread01_PCA.txt",header=T)
pwd
obs_pred4 <- read.table("/data/obs_pred_binary_0_0_spread01_PCA.txt",header=T)
~
obs_pred4 <- read.table("~/data/obs_pred_binary_0_0_spread01_PCA.txt",header=T)
rm(list=ls())#
#
library(caret)#
library(ggplot2)#
library(dplyr)#
#
obs_pred4 <- read.table("data/obs_pred_binary_0_0_spread01_PCA.txt",header=T)#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="0", replacement = "M")#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="1", replacement = "F")
obs_pred4 <- read.table("data/obs_pred_binary_0_0_spread01_PCA.txt",header=T)#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="0", replacement = "M")#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="1", replacement = "F")#
dA <- obs_pred4[obs_pred4$ID=="D-051" & obs_pred4$season=="S",]#
dB <- obs_pred4[obs_pred4$ID=="D-055" & obs_pred4$season=="S",]#
dC <- obs_pred4[obs_pred4$ID=="D-110" & obs_pred4$season=="S",]#
dD <- obs_pred4[obs_pred4$ID=="D-096" & obs_pred4$season=="W",]#
dE <- obs_pred4[obs_pred4$ID=="D-022" & obs_pred4$season=="S",]#
dF <- obs_pred4[obs_pred4$ID=="A-076" & obs_pred4$season=="W",]#
d1 <- rbind(dA, dB, dC, dD, dE, dF)#
d1$sym <- c("A", "B", "C", "D", "E", "F")#
g <- ggplot() + #
  geom_point(data=obs_pred4 , aes(x=pred, y=obs, color=sex), size=2) +#
  xlim(0,35) + ylim(0,35) +#
  labs(title="",x="Predicted TEWL", y="Observed TEWL") +#
#  scale_color_hue(name = "Location", labels = c(A = "Akita", T ="Tokyo"), guide=TRUE ) +#
 scale_color_hue(name = "sex", labels = c(F = "F", M ="M")) +#
#  scale_shape_discrete(name = "Sex", labels = c( W ="Female",M = "Male"), guide=guide_legend(reverse=TRUE) ) +#
#  scale_shape_discrete(name = "Season", labels = c(S="S", W="W" ), guide=TRUE ) +#
#  scale_shape_discrete(name = "Location", labels = c(A = "Akita", T ="Tokyo")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=25, family="Arial")) +#
  geom_abline(intercept=0,slope=1)　+ coord_fixed(ratio=1)#
g2 <-g + geom_text(data=d1 , aes(x=pred, y=obs, label=sym), size=6)#
quartz(type="pdf", file="data/pred_obs_binary_0_0_spread01_PCA.pdf")#
g2#
dev.off()
library(ggplot2)#
#
df <- read.table("data/RTDA_count.txt",header=T)
head(df)
df[1,:]
df[1,]
df <- df[,c(1:19)]
df[1,]
df <- df[,c(-8,-9)]#
#
d0 <- data.frame()#
for (ID in unique(df$ID)){#
  d <- df[df$ID==ID,]#
  s <- d[d$season=="S",]#
  ss <- as.data.frame(c(s[1,c(1:7)] , apply(s[,8:17], MARGIN=2, mean)))#
  w <- d[d$season=="W",] #
  ww <- as.data.frame(c(w[1,c(1:7)] , apply(w[,8:17], MARGIN=2, mean)))#
  d0 <- rbind(d0,ss,ww)#
}#
d0 <- na.omit(d0)
head(d0)
dA <- d0[d0$ID=="D-051" & d0$season=="S",]#
dB <- d0[d0$ID=="D-055" & d0$season=="S",]#
dC <- d0[d0$ID=="D-110" & d0$season=="S",]#
dD <- d0[d0$ID=="D-096" & d0$season=="W",]#
dE <- d0[d0$ID=="D-022" & d0$season=="S",]#
dF <- d0[d0$ID=="A-076" & d0$season=="W",]
d1 <- rbind(dA, dB, dC, dD, dE, dF)#
d1$sym <- c("A", "B", "C", "D", "E", "F")#
#
d2 <- d0[c(-357, -365,-471,-444,-300,-150), ]
g <- ggplot() +#
  geom_point(data=d2 , aes(x=m1_mean, y=TEWL, color=sex), size=2) +#
  geom_smooth(data=d0 , aes(x=m1_mean, y=TEWL), method = "lm") +#
  labs(x="Mean of mid-life of holes", y="TEWL") +#
   scale_color_hue(name = "sex", labels = c(F = "F", M ="M")) +#
#  scale_shape_discrete(name = "Adult/Child", labels = c(A = "Adult", C ="Child")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=25, family="Arial"))
g
g <- ggplot() +#
  geom_point(data=d2 , aes(x=m1_mean, y=TEWL, color=sex), size=2) +#
  geom_smooth(data=d0 , aes(x=m1_mean, y=TEWL), method = "lm") +#
  labs(x="Mean of mid-life of holes", y="TEWL") +#
   scale_color_hue(name = "sex", labels = c(F = "F", M ="M")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=25, family="Arial"))#
g2 <- g + geom_text(data=d1 , aes(x=m1_mean, y=TEWL, label=sym), size=6)#
#
quartz(type="pdf", file="data/m1_mean_TEWL_0702.pdf")#
g2#
dev.off()
g <- ggplot() +#
  geom_point(data=d2 , aes(x=m1_sd, y=TEWL, color=sex), size=2) +#
  geom_smooth(data=d2 , aes(x=m1_sd, y=TEWL), method = "lm") +#
  labs(x="Standard deviation of mid-life of holes", y="TEWL") +#
   scale_color_hue(name = "sex", labels = c(F = "F", M ="M")) +#
#  scale_shape_discrete(name = "Adult/Child", labels = c(A = "Adult", C ="Child")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=25, family="Arial"))#
g2 <- g + geom_text(data=d1 , aes(x=m1_sd, y=TEWL, label=sym), size=6)#
quartz(type="pdf", file="data/m1_sd_TEWL.pdf")#
g2#
dev.off()#
#
cutoff <- function(x){#
  if (x > 30){#
    return(30)#
  } else {#
    return(x)#
  }#
}#
#
d0$TE2 <- mapply(d0$TEWL, FUN=cutoff)#
d1$TE2 <- mapply(d1$TEWL, FUN=cutoff)#
d2$TE2 <- mapply(d2$TEWL, FUN=cutoff)#
#
g <- ggplot() +#
  geom_point(data=d2 , aes(x=m1_mean, y=m1_sd, color=TE2), size=2) +#
  geom_smooth(data=d2 , aes(x=m1_mean, y=m1_sd), method = "lm") +#
  labs(x="Mean of mid-life of holes", y="Standard deviation of mid-life of holes") +#
 scale_color_distiller(palette='Spectral', limits=c(5,30)) +#
#  scale_shape_discrete(name = "Adult/Child", labels = c(A = "Adult", C ="Child")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=25, family="Arial"))#
g2 <- g + geom_text(data=d1 , aes(x=m1_mean, y=m1_sd, label=sym), size=6)#
quartz(type="pdf", file="data/m1_mean_sd_TEWLcolor.pdf")#
g2#
dev.off()
rm(list=ls())#
#
library(doParallel)#
cl <- makePSOCKcluster(2)#
registerDoParallel(cl)#
library(caret)#
library(ggplot2)#
library(dplyr)#
#
df <- read.table("data/RTDA_count.txt",header=T)#
df <- df[,c(-8,-9)]#
df_para <- df[,1:7]#
df_para$temperature <- rep(0, nrow(df_para))#
df_para$humidity <- rep(0, nrow(df_para))#
df_para[df_para$location=="Akita" & df_para$season=="S",]$temperature <- 25.0#
df_para[df_para$location=="Akita" & df_para$season=="S",]$humidity <- 76#
df_para[df_para$location=="Tokyo" & df_para$season=="S",]$temperature <- 28.1#
df_para[df_para$location=="Tokyo" & df_para$season=="S",]$humidity <- 77#
df_para[df_para$location=="Akita" & df_para$season=="W",]$temperature <- 2.7#
df_para[df_para$location=="Akita" & df_para$season=="W",]$humidity <- 75#
df_para[df_para$location=="Tokyo" & df_para$season=="W",]$temperature <- 8.3#
df_para[df_para$location=="Tokyo" & df_para$season=="W",]$humidity <- 61#
#
df_grid <- df[,8:ncol(df)]#
df_grid2 <- df_grid[,-nearZeroVar(df_grid)]
df1 <- data.frame(df_para, df_grid2)#
IDs2 <- as.vector(t(unique(read.table("data/IDs.txt",header=F))))#
train_data0 <- df1[!df1$ID %in% IDs2,]#
train_data <- train_data0[,c(-1,-2,-5,-6)]#
test_data0 <- df1[df1$ID %in% IDs2,]#
test_data <- test_data0[,c(-1,-2,-5,-6)]
fitControl <- trainControl(## 10-fold CV#
                           method = "repeatedcv",#
                           number = 10,#
                           ## repeated ten times#
                           repeats = 10,#
                           savePredictions = TRUE)
rm(list=ls())#
#
library(doParallel)#
cl <- makePSOCKcluster(2)#
registerDoParallel(cl)#
library(caret)#
library(ggplot2)#
library(dplyr)#
#
df <- read.table("data/RTDA_count.txt",header=T)#
df <- df[,c(-8,-9)]#
df_para <- df[,1:7]#
df_para$temperature <- rep(0, nrow(df_para))#
df_para$humidity <- rep(0, nrow(df_para))#
df_para[df_para$location=="Akita" & df_para$season=="S",]$temperature <- 25.0#
df_para[df_para$location=="Akita" & df_para$season=="S",]$humidity <- 76#
df_para[df_para$location=="Tokyo" & df_para$season=="S",]$temperature <- 28.1#
df_para[df_para$location=="Tokyo" & df_para$season=="S",]$humidity <- 77#
df_para[df_para$location=="Akita" & df_para$season=="W",]$temperature <- 2.7#
df_para[df_para$location=="Akita" & df_para$season=="W",]$humidity <- 75#
df_para[df_para$location=="Tokyo" & df_para$season=="W",]$temperature <- 8.3#
df_para[df_para$location=="Tokyo" & df_para$season=="W",]$humidity <- 61#
#
df_grid <- df[,8:ncol(df)]
dim(df_grid)
df_grid2 <- df_grid[,-nearZeroVar(df_grid)]
dim(df_grid2)
library(ggplot2)#
library(ggExtra)#
library(MASS)#
library(dplyr)#
library(tidyr)#
library(TDA)#
library(viridis)#
library(akima)#
library(caret)#
#
df0 = read.table("data/A-061-4_persim_0dim", header=F)#
colnames(df0) <- c("lifetime","midlife","density")#
df0$density <- log(df0$density)#
#thr0 <- min(df0$density[df0$density>-Inf])#
thr0 <- -10
rm(list=ls())#
#
library(TDA)#
library(ggplot2)#
library(ggExtra)#
library(MASS)#
library(dplyr)#
library(tidyr)#
library(viridis)#
library(akima)#
library(gridExtra)#
#
get_density <- function(x, y, h, n = 100) {#
  dens <- MASS::kde2d(x = x, y = y, h=h, n = n)#
  ix <- findInterval(x, dens$x)#
  iy <- findInterval(y, dens$y)#
  ii <- cbind(ix, iy)#
  return(dens$z[ii])#
}#
#
filename0 <- "data/hom_bw_0_0_intermediate/A-061-4_0_0_binary_diag0.txt"#
filename1 <- "data/hom_bw_0_0_intermediate/A-061-4_0_0_binary_diag1.txt"#
#
D_zero <- read.table(filename0, sep="\t",header=T)#
D_zero$density <- get_density(D_zero$midlife, D_zero$lifetime)#
D_zero$density <- log(D_zero$density)#
D_one <- read.table(filename1, sep="\t",header=T)#
D_one$density <- get_density(D_one$midlife, D_one$lifetime)#
D_one$density <- log(D_one$density)#
g0 <- ggplot() + geom_point(data=D_zero , aes(x=midlife, y=lifetime, color = density), size=4) +  xlim(-156.5, 6.0) + ylim(-5,89)+#
 #scale_color_distiller(palette='Spectral', limits = c(0,5)) +#
 scale_color_distiller(palette='Spectral') +#
  labs(x="midlife", y="lifetime") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=16, family="Arial"))#
#
quartz(type="pdf", file="data/A-061-4_binary_perdiag0.pdf")#
g0#
dev.off()#
#
g1 <- ggplot() + geom_point(data=D_one , aes(x=midlife, y=lifetime, color = density), size=4) + xlim(-16, 27.5) + ylim(-2,36)+#
 #scale_color_distiller(palette='Spectral', limits = c(0,5)) +#
 scale_color_distiller(palette='Spectral') +#
  labs(x="midlife", y="lifetime") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=16, family="Arial"))#
#
quartz(type="pdf", file="data/A-061-4_binary_perdiag1.pdf")#
g1#
dev.off()
library(ggplot2)#
library(ggExtra)#
library(MASS)#
library(dplyr)#
library(tidyr)#
library(TDA)#
library(viridis)#
library(akima)#
library(caret)#
#
df0 = read.table("data/A-061-4_persim_0dim.txt", header=F)#
colnames(df0) <- c("lifetime","midlife","density")#
df0$density <- log(df0$density)#
#thr0 <- min(df0$density[df0$density>-Inf])#
thr0 <- -10#
#
cutoff0 <- function(x){#
  if (x < thr0){#
    return(thr0)#
  } else {#
    return(x)#
  }#
}#
df0$density <- mapply(df0$density, FUN=cutoff0)#
#
df0$midlife <- -156.5 + 8.125 * df0$midlife#
df0$lifetime <- 4.45 * (19-df0$lifetime)#
#
g0 <- ggplot(df0, aes(x=midlife, y=lifetime, fill=density)) + xlim(-156.5, 6.0) + ylim(-5,89)+#
geom_tile()+#
#scale_fill_distiller(palette='Spectral', limits = c(-15,-2.6))+#
scale_fill_distiller(palette='Spectral')+#
labs(title="density of 0-dim features", x="Mid-life", y="Life-time", fill="density") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))#
quartz(type="pdf", file="data/A-061-4_0dim_persim_new.pdf")#
g0#
dev.off()#
#
df1 = read.table("data/A-061-4_persim_1dim.txt", header=F)#
colnames(df1) <- c("lifetime","midlife","density")#
df1$density <- log(df1$density)#
#thr1 <- min(df1$density[df1$density>-Inf])#
thr1 <- -10#
cutoff1 <- function(x){#
  if (x < thr1){#
    return(thr1)#
  } else {#
    return(x)#
  }#
}#
df1$density <- mapply(df1$density, FUN=cutoff1)#
df1$midlife <- -16 + 2.175 * df1$midlife#
df1$lifetime <- 1.8 * (19-df1$lifetime)#
#
g1 <- ggplot(df1, aes(x=midlife, y=lifetime, fill=density)) + xlim(-16, 27.5) + ylim(-2,36)+#
geom_tile()+#
#scale_fill_distiller(palette='Spectral', limits = c(-15,-2.6))+#
scale_fill_distiller(palette='Spectral')+#
labs(title="density of 1-dim features", x="Mid-life", y="Life-time", fill="density") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))#
quartz(type="pdf", file="data/A-061-4_1dim_persim.pdf")#
g1#
dev.off()
library(ggplot2)#
library(ggExtra)#
library(MASS)#
library(dplyr)#
library(tidyr)#
library(TDA)#
library(viridis)#
library(akima)#
library(caret)#
#
df = read.table("data/variable_importance_grid.txt", header=F)#
#
name <- as.character(df[,1])#
d <- strsplit(name,"_")#
df1 <- data.frame()#
for(i in 1:length(d)){#
	row <- d[[i]]#
  row2 <- as.data.frame(row)#
  df1 <- rbind(df1,t(row2))#
}#
rownames(df1) <- 1:nrow(df1)#
df2 <- cbind(df1,df[,2])#
colnames(df2) <- c("dim","midlife","lifetime","importance")#
df2$importance <- log(df2$importance)#
#
cutoff <- function(x){#
  if (x < -15){#
    return(-15)#
  } else {#
    return(x)#
  }#
}#
df2$importance <- mapply(df2$importance, FUN=cutoff)#
#
df2$midlife <- as.numeric(as.character(df2$midlife))+1#
df2$lifetime <- as.numeric(as.character(df2$lifetime))#
#
df_dim0 <- df2[df2["dim"]=="comp",]#
for (i in 1:20){#
	df_dim0$midlife[df_dim0$midlife==i] <- -156.5 + 8.125 * (i-1)#
	df_dim0$lifetime[df_dim0$lifetime==i] <- 4.45 * (i-1)#
}#
#write.table(df_dim0,file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/important_region_dim0.txt",sep="\t",quote=FALSE, row.names = F)#
#
df_dim1 <- df2[df2["dim"]=="hole",]#
for (i in 1:20){#
	df_dim1$midlife[df_dim1$midlife==i] <- -16 + 2.175 * (i-1)#
	df_dim1$lifetime[df_dim1$lifetime==(21-i)] <- 1.8 * (20-i)#
}#
#write.table(df_dim1,file="~/Dropbox/皮膚解析/TDA関連/TDA_2020_4/important_region_dim1.txt",sep="\t",quote=FALSE, row.names = F)#
#
g0 <- ggplot(df_dim0, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-156.5, 6.0) + ylim(-5,89)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-15,-2.6))+#
labs(title="Importance of 0-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))#
quartz(type="pdf", file="data/0dim_importance.pdf")#
g0#
dev.off()#
#
g1 <- ggplot(df_dim1, aes(x=midlife, y=lifetime, fill=importance)) + xlim(-16, 27.5) + ylim(-2,36)+#
geom_tile()+#
scale_fill_distiller(palette='Spectral', limits = c(-15,-2.6))+#
labs(title="Importance of 1-dim features", x="Mid-life", y="Life-time", fill="Importance") +#
theme(panel.border = element_rect(fill = NA, size=1), panel.background = element_rect(fill = NA,color = NA), text=element_text(size=25, family="Arial"))#
quartz(type="pdf", file="data/1dim_importance.pdf")#
g1#
dev.off()
rm(list=ls())#
#
library(tidyr)#
library(dplyr)#
library(ggrepel)#
library(coefplot)#
#
df <- read.table("data/RTDA_count.txt",header=T)#
df$temperature <- rep(0, nrow(df))#
df$humidity <- rep(0, nrow(df))#
df[df$location=="Akita" & df$season=="S",]$temperature <- 25.0#
df[df$location=="Akita" & df$season=="S",]$humidity <- 76#
df[df$location=="Tokyo" & df$season=="S",]$temperature <- 28.1#
df[df$location=="Tokyo" & df$season=="S",]$humidity <- 77#
df[df$location=="Akita" & df$season=="W",]$temperature <- 2.7#
df[df$location=="Akita" & df$season=="W",]$humidity <- 75#
df[df$location=="Tokyo" & df$season=="W",]$temperature <- 8.3#
df[df$location=="Tokyo" & df$season=="W",]$humidity <- 61
df2 <- data.frame()#
#
LM <- lm(TEWL ~ m0_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 0-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(TEWL ~ m0_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 0-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(TEWL ~ l0_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 0-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(TEWL ~ l0_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 0-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(TEWL ~ m1_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 1-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(TEWL ~ m1_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 1-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(TEWL ~ l1_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 1-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(TEWL ~ l1_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 1-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(TEWL ~ components ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("number of connected components"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(TEWL ~ holes ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("number of holes"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)
LM <- lm(TEWL ~ age ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("age"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(TEWL ~ sex ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("sex"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(TEWL ~ temperature ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("temperature"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(TEWL ~ humidity ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("humidity"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
p_val <- df2$p_value
FDR <- p.adjust(p_val, "BH")#
df2$FDR <- FDR#
#
df2$flag <- rep("g", nrow(df2))#
df2[df2$FDR < 0.01 & df2$t_value > 0,]$flag <- "r"#
df2[df2$FDR < 0.01 & df2$t_value < 0,]$flag <- "b"#
#write.table(df2, "~/Dropbox/KOSE201809/lm_eval2.txt" ,col.names=F,row.names=F,quote=F,sep="\t")#
#
df3 <- df2[order(df2$t_value,decreasing=T),]
df3
g <- ggplot(df3, aes(reorder(x = type, X = t_value, FUN = mean), y=t_value, fill=flag)) +#
  geom_bar(stat="identity", width = 0.5)+ #
  coord_flip() + #
  labs(x="", y="t value") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=16, family="Arial"), legend.position = 'none') +#
  geom_hline(yintercept = 0) + #
  scale_fill_manual(values = c("blue", "gray", "red"))
g
quartz(type="pdf", file="data/t_values.pdf")#
g#
dev.off()
#Rscript TDA.R /Users/kosekikeita/Dropbox/KOSE_2018_3/adult2/10001#
rm(list=ls())#
library(TDA)#
library(ggplot2)#
library(ggExtra)#
library(MASS)#
library(dplyr)#
library(tidyr)#
library(viridis)#
library(akima)#
#
"D-051-1"#
filename <- "data/RTDA_diagrams/D-051-1_coordinate.txt"#
X <- read.table(filename, sep=",")#
#
colnames(X) <- c("x","y")#
#
Xlim <- c(0, 1400);#
Ylim <- c(0, 1200);#
by <- 10;#
#
X_knn.Diag <- gridDiag(X = X, FUN = knnDE, k = 100,#
                            lim = cbind(Xlim, Ylim),by = by,#
                            sublevel = FALSE, library = "Dionysus",#
                            printProgress = TRUE, location=TRUE)#
#
D_zero1 <- as.data.frame(X_knn.Diag$diagram[X_knn.Diag$diagram[,1]==0,])#
D_zero1[, 2] <- log(D_zero1[, 2])#
D_zero1[, 3] <- log(D_zero1[, 3])#
D_zero1[, 4] <- (D_zero1[, 2] + D_zero1[, 3])/2#
D_zero1[, 5] <- D_zero1[, 3] - D_zero1[, 2]#
D_zero1[, 6] <- rep("D-055-1",nrow(D_zero1))#
colnames(D_zero1)<- c("dimension", "Death","Birth", "midlife","lifetime", "ID") #
#D_zero1$density <- get_density(D_zero1$midlife, D_zero1$lifetime)#
#
D_one1 <- as.data.frame(X_knn.Diag$diagram[X_knn.Diag$diagram[,1]==1,])#
D_one1[, 2] <- log(D_one1[, 2])#
D_one1[, 3] <- log(D_one1[, 3])#
D_one1[, 4] <- (D_one1[, 2] + D_one1[, 3])/2#
D_one1[, 5] <- D_one1[, 3] - D_one1[, 2]#
D_one1[, 6] <- rep("D-055-1",nrow(D_one1))#
colnames(D_one1)<- c("dimension", "Death","Birth", "midlife","lifetime", "ID") #
#D_one1$density <- get_density(D_one1$midlife, D_one1$lifetime)#
#
"D-022-1"#
filename2 <- "data/RTDA_diagrams/D-022-1_coordinate.txt"#
Y <- read.table(filename2, sep=",")#
#
Y_knn.Diag <- gridDiag(X = Y, FUN = knnDE, k = 100,#
                            lim = cbind(Xlim, Ylim),by = by,#
                            sublevel = FALSE, library = "Dionysus",#
                            printProgress = TRUE, location=TRUE)#
#
D_zero2 <- as.data.frame(Y_knn.Diag$diagram[Y_knn.Diag$diagram[,1]==0,])#
D_zero2[, 2] <- log(D_zero2[, 2])#
D_zero2[, 3] <- log(D_zero2[, 3])#
D_zero2[, 4] <- (D_zero2[, 2] + D_zero2[, 3])/2#
D_zero2[, 5] <- D_zero2[, 3] - D_zero2[, 2]#
D_zero2[, 6] <- rep("A-076-4",nrow(D_zero2))#
colnames(D_zero2)<- c("dimension", "Death","Birth", "midlife","lifetime", "ID") #
D_one2 <- as.data.frame(Y_knn.Diag$diagram[Y_knn.Diag$diagram[,1]==1,])#
D_one2[, 2] <- log(D_one2[, 2])#
D_one2[, 3] <- log(D_one2[, 3])#
D_one2[, 4] <- (D_one2[, 2] + D_one2[, 3])/2#
D_one2[, 5] <- D_one2[, 3] - D_one2[, 2]#
D_one2[, 6] <- rep("A-076-4",nrow(D_one2))#
colnames(D_one2)<- c("dimension", "Death","Birth", "midlife","lifetime", "ID")
"merge"#
D_one3 <- rbind( D_one2,D_one1)#
g <- ggplot() + geom_point(data=D_one3 , aes(x=midlife, y=lifetime, color = ID), size=1) + #
#  xlim(-17.5, -12) + ylim(0,3) +#
  labs(x="Mid-life", y="Life-time") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=16, family="Arial"),#
    legend.position = 'none')#
#
g2 <- ggMarginal(#
  g,#
  type = "density",#
  margins = "both",#
  size = 5,#
  groupColour = TRUE,#
  groupFill = TRUE#
)
g2
quartz(type="pdf", file="data/merged_diagrams.pdf")#
g2#
dev.off()#
D_zero3 <- rbind( D_zero2,D_zero1)#
g <- ggplot() + geom_point(data=D_zero3 , aes(x=midlife, y=lifetime, color = ID), size=1) + #
#  xlim(-17.5, -12) + ylim(0,3) +#
  labs(x="Mid-life", y="Life-time") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=16, family="Arial"),#
    legend.position = 'none')#
#
g2 <- ggMarginal(#
  g,#
  type = "density",#
  margins = "both",#
  size = 5,#
  groupColour = TRUE,#
  groupFill = TRUE#
)
g2
quartz(type="pdf", file="~/Dropbox/KOSE2019/fig2/figs/merged_diagrams_0dim.pdf")#
g2#
dev.off()
g2
quartz(type="pdf", file="data/merged_diagrams_0dim.pdf")#
g2#
dev.off()
rm(list=ls())#
#
library(TDA)#
library(ggplot2)#
library(ggExtra)#
library(MASS)#
library(dplyr)#
library(tidyr)#
library(viridis)#
library(akima)#
#
filename <- "data/RTDA_diagrams/D-022-1_coordinate.txt"#
#filename <- "~/Dropbox/KOSE2019/level4_10_rep5/D-051-1_coordinate.txt"#
#filename <- "~/Dropbox/KOSE2019/level4_10_rep5/D-110-5_coordinate.txt"#
#
X <- read.table(filename, sep=",")#
colnames(X) <- c("x","y")#
#X$y <- 999-X$y#
#
Xlim <- c(0, 1400);#
Ylim <- c(0, 1200);#
by <- 10;#
Xseq <- seq(Xlim[1], Xlim[2], by = by)#
Yseq <- seq(Ylim[1], Ylim[2], by = by)#
Grid <- expand.grid(Xseq, Yseq)#
#
k <- 100#
kNN <- knnDE(X = X, Grid = Grid, k = k)
df <- cbind(Grid,kNN)#
colnames(df)<- c("x","y","z")#
df$z <- log(df$z)#
x <- c(1:1400)#
y <- c(1:1200)#
inter_p  <- interp( df$x, df$y, df$z, x, y)#
write.table(inter_p$z, "data/D-022-1_interpolated.txt" ,col.names=F,row.names=F,quote=F,sep="\t")#
#
X_knn.Diag <- gridDiag(X = X, FUN = knnDE, k = 100,#
                            lim = cbind(Xlim, Ylim),by = by,#
                            sublevel = FALSE, library = "Dionysus",#
                            printProgress = TRUE, location=TRUE)#
#
D_one <- as.data.frame(X_knn.Diag$diagram[X_knn.Diag$diagram[,1]==1,])#
D_one[, 2] <- log(D_one[, 2])#
D_one[, 3] <- log(D_one[, 3])#
D_one[, 4] <- (D_one[, 2] + D_one[, 3])/2#
D_one[, 5] <- D_one[, 3] - D_one[, 2]#
#D_one[, 6] <- rep("005",nrow(D_one))#
#colnames(D_one)<- c("dimension", "Death","Birth", "midlife","lifetime", "id") #
colnames(D_one)<- c("dimension", "Death","Birth", "midlife","lifetime") #
D_zero <- as.data.frame(X_knn.Diag$diagram[X_knn.Diag$diagram[,1]==0,])#
D_zero[, 2] <- log(D_zero[, 2])#
D_zero[, 3] <- log(D_zero[, 3])#
D_zero[, 4] <- (D_zero[, 2] + D_zero[, 3])/2#
D_zero[, 5] <- D_zero[, 3] - D_zero[, 2]#
#D_zero[, 6] <- rep("005",nrow(D_zero))#
#colnames(D_zero)<- c("dimension", "Death","Birth", "midlife","lifetime", "id") #
colnames(D_zero)<- c("dimension", "Death","Birth", "midlife","lifetime") #
one <- which(X_knn.Diag[["diagram"]][, 1] == 1)#
cycle <- X_knn.Diag[["cycleLocation"]]#
cycle_one <- cycle[one]#
#
zero <- which(X_knn.Diag[["diagram"]][, 1] == 0)#
domain <- X_knn.Diag[["birthLocation"]]#
domain_zero <- domain[zero,]#
for (thr in c(-10, -14.5, -15, -15.5, -16.5)){#
#for (thr in seq(-14,-17,length=7)){#
	num1 <- which(thr <= D_one$Birth & D_one$Death <= thr)#
	cycle_num <- cycle_one[num1]#
	num0 <- which(thr <= D_zero$Birth & D_zero$Death <= thr)#
	domain_num <- domain_zero[num0,]#
	pdf(paste("data/D-022-1_cycles_", thr , ".pdf", sep=""))#
	plot(X, pch = 20, cex = 0.0, xlab = "", ylab = "", main = paste("threshold = ",thr , sep="")) #cex = 0.05#
	#plot(Z, pch = 20, cex = 0.05)#cex = 0.05#
	for (i in seq(along = cycle_num)) {#
		for (j in seq_len(dim(cycle_num[[i]])[1])) {#
	 	 lines(cycle_num[[i]][j, , ], pch = 19, lwd=2, col = i)#
		}#
	}#
	dev.off()#
	if (is.matrix(domain_num)){#
		pdf(paste("data/D-022-1_comps_", thr , ".pdf", sep=""))#
			plot(X, pch = 20, cex = 0.0, xlab = "", ylab = "", main = paste("threshold = ",thr , sep="")) #cex = 0.05#
			for (i in seq(along = domain_num[,1])){#
				points(domain_num[i,1],domain_num[i,2], pch = 17, lwd=2, col = "black")#
			}#
		dev.off()#
	} else {#
			pdf(paste("data/D-022-1_comps_", thr , ".pdf", sep=""))#
			plot(X, pch = 20, cex = 0.0, xlab = "", ylab = "", main = paste("threshold = ",thr , sep="")) #cex = 0.05#
			for (i in seq(along = domain_num[1])){#
				points(domain_num[1],domain_num[2], pch = 17, lwd=2, col = "black")#
			}#
		dev.off()#
	}#
}
rm(list=ls())#
#
library(TDA)#
library(ggplot2)#
library(ggExtra)#
library(MASS)#
library(dplyr)#
library(tidyr)#
library(viridis)#
library(akima)#
#
filename <- "data/RTDA_diagrams/D-051-1_coordinate.txt"#
#filename <- "~/Dropbox/KOSE2019/level4_10_rep5/D-051-1_coordinate.txt"#
#filename <- "~/Dropbox/KOSE2019/level4_10_rep5/D-110-5_coordinate.txt"#
#
X <- read.table(filename, sep=",")#
colnames(X) <- c("x","y")#
#X$y <- 999-X$y#
#
Xlim <- c(0, 1400);#
Ylim <- c(0, 1200);#
by <- 10;#
Xseq <- seq(Xlim[1], Xlim[2], by = by)#
Yseq <- seq(Ylim[1], Ylim[2], by = by)#
Grid <- expand.grid(Xseq, Yseq)#
#
k <- 100#
kNN <- knnDE(X = X, Grid = Grid, k = k)#
#
#pdf("~/Dropbox/KOSE2019/fig1/D-051-1_3D.pdf")#
#persp(Xseq, Yseq,#
#       matrix(log(kNN) * 10, ncol = length(Yseq), nrow = length(Xseq)), xlab = "",#
#       ylab = "", zlab = "", theta = -20, phi = 35, ltheta = 50,#
#       col = 2, border = NA, main = "KDE", d = 0.5, scale = FALSE,#
#       expand = 3, shade = 0.9)#
#dev.off()#
#
#persp(Xseq, Yseq,#
#       matrix(log(kNN) * 10, ncol = length(Yseq), nrow = length(Xseq)), xlab = "",#
#       ylab = "", zlab = "", theta = -20, phi = 35, ltheta = 50,#
#       col = 2, border = NA, main = "KDE", d = 0.5, scale = FALSE,#
#       expand = 3, shade = 0.9)#
df <- cbind(Grid,kNN)#
colnames(df)<- c("x","y","z")#
df$z <- log(df$z)#
x <- c(1:1400)#
y <- c(1:1200)#
inter_p  <- interp( df$x, df$y, df$z, x, y)#
write.table(inter_p$z, "data/D-022-1_interpolated.txt" ,col.names=F,row.names=F,quote=F,sep="\t")#
#
X_knn.Diag <- gridDiag(X = X, FUN = knnDE, k = 100,#
                            lim = cbind(Xlim, Ylim),by = by,#
                            sublevel = FALSE, library = "Dionysus",#
                            printProgress = TRUE, location=TRUE)#
#
D_one <- as.data.frame(X_knn.Diag$diagram[X_knn.Diag$diagram[,1]==1,])#
D_one[, 2] <- log(D_one[, 2])#
D_one[, 3] <- log(D_one[, 3])#
D_one[, 4] <- (D_one[, 2] + D_one[, 3])/2#
D_one[, 5] <- D_one[, 3] - D_one[, 2]#
#D_one[, 6] <- rep("005",nrow(D_one))#
#colnames(D_one)<- c("dimension", "Death","Birth", "midlife","lifetime", "id") #
colnames(D_one)<- c("dimension", "Death","Birth", "midlife","lifetime") #
D_zero <- as.data.frame(X_knn.Diag$diagram[X_knn.Diag$diagram[,1]==0,])#
D_zero[, 2] <- log(D_zero[, 2])#
D_zero[, 3] <- log(D_zero[, 3])#
D_zero[, 4] <- (D_zero[, 2] + D_zero[, 3])/2#
D_zero[, 5] <- D_zero[, 3] - D_zero[, 2]#
#D_zero[, 6] <- rep("005",nrow(D_zero))#
#colnames(D_zero)<- c("dimension", "Death","Birth", "midlife","lifetime", "id") #
colnames(D_zero)<- c("dimension", "Death","Birth", "midlife","lifetime") #
one <- which(X_knn.Diag[["diagram"]][, 1] == 1)#
cycle <- X_knn.Diag[["cycleLocation"]]#
cycle_one <- cycle[one]#
#
zero <- which(X_knn.Diag[["diagram"]][, 1] == 0)#
domain <- X_knn.Diag[["birthLocation"]]#
domain_zero <- domain[zero,]#
for (thr in c(-10, -14.5, -15, -15.5, -16.5)){#
#for (thr in seq(-14,-17,length=7)){#
	num1 <- which(thr <= D_one$Birth & D_one$Death <= thr)#
	cycle_num <- cycle_one[num1]#
	num0 <- which(thr <= D_zero$Birth & D_zero$Death <= thr)#
	domain_num <- domain_zero[num0,]#
	pdf(paste("data/D-022-1_cycles_", thr , ".pdf", sep=""))#
	plot(X, pch = 20, cex = 0.0, xlab = "", ylab = "", main = paste("threshold = ",thr , sep="")) #cex = 0.05#
	#plot(Z, pch = 20, cex = 0.05)#cex = 0.05#
	for (i in seq(along = cycle_num)) {#
		for (j in seq_len(dim(cycle_num[[i]])[1])) {#
	 	 lines(cycle_num[[i]][j, , ], pch = 19, lwd=2, col = i)#
		}#
	}#
	dev.off()#
	if (is.matrix(domain_num)){#
		pdf(paste("data/D-022-1_comps_", thr , ".pdf", sep=""))#
			plot(X, pch = 20, cex = 0.0, xlab = "", ylab = "", main = paste("threshold = ",thr , sep="")) #cex = 0.05#
			for (i in seq(along = domain_num[,1])){#
				points(domain_num[i,1],domain_num[i,2], pch = 17, lwd=2, col = "black")#
			}#
		dev.off()#
	} else {#
			pdf(paste("data/D-022-1_comps_", thr , ".pdf", sep=""))#
			plot(X, pch = 20, cex = 0.0, xlab = "", ylab = "", main = paste("threshold = ",thr , sep="")) #cex = 0.05#
			for (i in seq(along = domain_num[1])){#
				points(domain_num[1],domain_num[2], pch = 17, lwd=2, col = "black")#
			}#
		dev.off()#
	}#
}
rm(list=ls())#
#
library(tidyr)#
library(dplyr)#
library(ggrepel)#
library(coefplot)#
#
df <- read.table("data/RTDA_count.txt",header=T)
df[1,1:20]
df <- read.table("data/RTDA_count.txt",header=T)#
df$temperature <- rep(0, nrow(df))#
df$humidity <- rep(0, nrow(df))#
df[df$location=="Akita" & df$season=="S",]$temperature <- 25.0#
df[df$location=="Akita" & df$season=="S",]$humidity <- 76#
df[df$location=="Tokyo" & df$season=="S",]$temperature <- 28.1#
df[df$location=="Tokyo" & df$season=="S",]$humidity <- 77#
df[df$location=="Akita" & df$season=="W",]$temperature <- 2.7#
df[df$location=="Akita" & df$season=="W",]$humidity <- 75#
df[df$location=="Tokyo" & df$season=="W",]$temperature <- 8.3#
df[df$location=="Tokyo" & df$season=="W",]$humidity <- 61#
#
cor(df$TEWL, df$corneo)#
#[1] -0.1525042#
cor(df$TEWL, df$skicon)#
#[1] -0.03248303#
#
df2 <- data.frame()
LM <- lm(corneo ~ m0_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 0-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ m0_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 0-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l0_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 0-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l0_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 0-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ m1_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 1-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ m1_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 1-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l1_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 1-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l1_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 1-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ components ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("number of connected components"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ holes ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("number of holes"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
#LM <- lm(TEWL ~ white_pixels ,data=df)#
#t <- summary(LM)$coefficients[2,3]#
#p <- summary(LM)$coefficients[2,4]#
#d <- data.frame(type=c("ratio of white pixels"), t_value = c(t), p_value=c(p))#
#df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ age ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("age"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ sex ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("sex"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ temperature ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("temperature"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ humidity ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("humidity"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ TEWL ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("TEWL"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
p_val <- df2$p_value#
#
FDR <- p.adjust(p_val, "BH")#
df2$FDR <- FDR#
#
df2$flag <- rep("g", nrow(df2))#
df2[df2$FDR < 0.01 & df2$t_value > 0,]$flag <- "r"#
df2[df2$FDR < 0.01 & df2$t_value < 0,]$flag <- "b"#
#write.table(df2, "~/Dropbox/KOSE201809/lm_eval2.txt" ,col.names=F,row.names=F,quote=F,sep="\t")#
#
df3 <- df2[order(df2$t_value,decreasing=T),]#
#
g <- ggplot(df3, aes(reorder(x = type, X = t_value, FUN = mean), y=t_value, fill=flag)) +#
  geom_bar(stat="identity", width = 0.5)+ #
  coord_flip() + #
  labs(x="", y="t value") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=16, family="Arial"), legend.position = 'none') +#
  geom_hline(yintercept = 0) + #
  scale_fill_manual(values = c("blue", "gray", "red"))
g
df2 <- data.frame()#
#
LM <- lm(corneo ~ m0_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 0-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ m0_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 0-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l0_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 0-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l0_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 0-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ m1_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 1-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ m1_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 1-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l1_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 1-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l1_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 1-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ components ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("number of connected components"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ holes ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("number of holes"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
#LM <- lm(TEWL ~ white_pixels ,data=df)#
#t <- summary(LM)$coefficients[2,3]#
#p <- summary(LM)$coefficients[2,4]#
#d <- data.frame(type=c("ratio of white pixels"), t_value = c(t), p_value=c(p))#
#df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ age ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("age"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ sex ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("sex"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ temperature ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("temperature"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ humidity ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("humidity"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
p_val <- df2$p_value#
#
FDR <- p.adjust(p_val, "BH")#
df2$FDR <- FDR#
#
df2$flag <- rep("g", nrow(df2))#
df2[df2$FDR < 0.01 & df2$t_value > 0,]$flag <- "r"#
df2[df2$FDR < 0.01 & df2$t_value < 0,]$flag <- "b"#
#write.table(df2, "~/Dropbox/KOSE201809/lm_eval2.txt" ,col.names=F,row.names=F,quote=F,sep="\t")#
#
df3 <- df2[order(df2$t_value,decreasing=T),]#
#
g <- ggplot(df3, aes(reorder(x = type, X = t_value, FUN = mean), y=t_value, fill=flag)) +#
  geom_bar(stat="identity", width = 0.5)+ #
  coord_flip() + #
  labs(x="", y="t value") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=16, family="Arial"), legend.position = 'none') +#
  geom_hline(yintercept = 0) + #
  scale_fill_manual(values = c("blue", "gray", "red"))
g
df <- read.table("data/RTDA_count.txt",header=T)
df[1,1:20]
df <- read.table("data/RTDA_count.txt",header=T)[,1:19]
df[1,]
df <- read.table("data/RTDA_count.txt",header=T)[,1:19]#
df0 <- data.frame()#
for(i in df$ID){#
  d <- df[df$ID==i,]#
  s <- data.frame(season="S", vapo=d$vapo_s, corneo=d$corneo_s, skicon=d$skicon_s)#
  w <- data.frame(season="W", vapo=d$vapo_w, corneo=d$corneo_w, skicon=d$skicon_w)#
  d1 <- cbind(d[,1:4], s)#
  d2 <- cbind(d[,1:4], w)#
  d3 <- rbind(d1,d2)#
  df0 <- rbind(df0, d3)#
}
df2 <- read.table("data/RTDA_count.txt",header=T)[,1:19]#
df0 <- data.frame()#
for(i in unique(df2$ID)){#
  i <- as.character(i)#
  d <- df1[df1$ID==i,]#
  ds <- d[d$num==1 | d$num==2 |d$num==3,]#
  dsm <- t(as.data.frame(apply(ds[,3:12],MARGIN=2,median)))#
  dw <- d[d$num==4 | d$num==5 |d$num==6,]#
  dwm <- t(as.data.frame(apply(dw[,3:12],MARGIN=2,median)))#
  d1 <- df2[df2$ID==i,]#
  d1s <- d1[d1$season=="S",]#
  d1s2 <- data.frame(d1s, dsm)#
  d1w <- d1[d1$season=="W",]#
  d1w2 <- data.frame(d1w, dwm)#
  d2 <- rbind(d1s2, d1w2)#
  df0 <- rbind(df0, d2)#
}
df <- read.table("data/RTDA_count.txt",header=T)[,1:19]#
df0 <- data.frame()#
for(i in unique(df$ID)){#
  i <- as.character(i)#
  d <- df[df$ID==i,]#
  ds <- d[d$num==1 | d$num==2 |d$num==3,]#
  dsm <- t(as.data.frame(apply(ds[,3:12],MARGIN=2,median)))#
  dw <- d[d$num==4 | d$num==5 |d$num==6,]#
  dwm <- t(as.data.frame(apply(dw[,3:12],MARGIN=2,median)))#
  d1 <- df[df$ID==i,]#
  d1s <- d1[d1$season=="S",]#
  d1s2 <- data.frame(d1s, dsm)#
  d1w <- d1[d1$season=="W",]#
  d1w2 <- data.frame(d1w, dwm)#
  d2 <- rbind(d1s2, d1w2)#
  df0 <- rbind(df0, d2)#
}
df0
df <- read.table("data/RTDA_count.txt",header=T)[,1:19]
df[1,]
head(df)
unique(df$ID)
i = unique(df$ID)[1]
d <- df[df$ID==i,]
d
ds <- d[d$num==1 | d$num==2 |d$num==3,]
ds
ds1 <- ds[1,c(1,3,4,5,6,7,8,9)]
ds1
10:19
ds2 <- apply(ds[,10:19],MARGIN=2,median)
ds2
cbind(ds1,ds2)
ds1
ds2
ds2 <- t(as.data.frame(apply(ds[,10:19],MARGIN=2,median)))
ds2
cbind(ds1,ds2)
ds3 <- cbind(ds1,ds2)
dw <- d[d$num==4 | d$num==5 |d$num==6,]#
  dw1 <- ds[1,c(1,3,4,5,6,7,8,9)]#
  dw2 <- t(as.data.frame(apply(ds[,10:19],MARGIN=2,median)))#
  dw3 <- cbind(ds1,ds2)
dw3
rbind(df0,ds3,dw3)
df0
df0 <- data.frame()
rbind(df0,ds3,dw3)
df0 <- read.table("data/RTDA_count.txt",header=T)[,1:19]#
df <- data.frame()#
for(i in unique(df0$ID)){#
  d <- df0[df0$ID==i,]#
  ds <- d[d$num==1 | d$num==2 |d$num==3,]#
  ds1 <- ds[1,c(1,3,4,5,6,7,8,9)]#
  ds2 <- t(as.data.frame(apply(ds[,10:19],MARGIN=2,median)))#
  ds3 <- cbind(ds1,ds2)#
  dw <- d[d$num==4 | d$num==5 |d$num==6,]#
  dw1 <- ds[1,c(1,3,4,5,6,7,8,9)]#
  dw2 <- t(as.data.frame(apply(ds[,10:19],MARGIN=2,median)))#
  dw3 <- cbind(ds1,ds2)#
  df0 <- rbind(df,ds3,dw3)#
}
df0 <- read.table("data/RTDA_count.txt",header=T)[,1:19]#
df <- data.frame()#
for(i in unique(df0$ID)){#
  d <- df0[df0$ID==i,]#
  ds <- d[d$num==1 | d$num==2 |d$num==3,]#
  ds1 <- ds[1,c(1,3,4,5,6,7,8,9)]#
  ds2 <- t(as.data.frame(apply(ds[,10:19],MARGIN=2,median)))#
  ds3 <- cbind(ds1,ds2)#
  dw <- d[d$num==4 | d$num==5 |d$num==6,]#
  dw1 <- ds[1,c(1,3,4,5,6,7,8,9)]#
  dw2 <- t(as.data.frame(apply(ds[,10:19],MARGIN=2,median)))#
  dw3 <- cbind(ds1,ds2)#
  df0 <- rbind(df,ds3,dw3)#
}
unique(df0$ID
)
df <- read.table("data/RTDA_count.txt",header=T)[,1:19]#
df0 <- data.frame()#
for(i in unique(df$ID)){#
  d <- df[df$ID==i,]#
  ds <- d[d$num==1 | d$num==2 |d$num==3,]#
  ds1 <- ds[1,c(1,3,4,5,6,7,8,9)]#
  ds2 <- t(as.data.frame(apply(ds[,10:19],MARGIN=2,median)))#
  ds3 <- cbind(ds1,ds2)#
  dw <- d[d$num==4 | d$num==5 |d$num==6,]#
  dw1 <- ds[1,c(1,3,4,5,6,7,8,9)]#
  dw2 <- t(as.data.frame(apply(ds[,10:19],MARGIN=2,median)))#
  dw3 <- cbind(ds1,ds2)#
  df0 <- rbind(df0,ds3,dw3)#
}
head(df0)
df0 <- read.table("data/RTDA_count.txt",header=T)[,1:19]#
df <- data.frame()#
for(i in unique(df0$ID)){#
  d <- df0[df0$ID==i,]#
  ds <- d[d$num==1 | d$num==2 |d$num==3,]#
  ds1 <- ds[1,c(1,3,4,5,6,7,8,9)]#
  ds2 <- t(as.data.frame(apply(ds[,10:19],MARGIN=2,median)))#
  ds3 <- cbind(ds1,ds2)#
  dw <- d[d$num==4 | d$num==5 |d$num==6,]#
  dw1 <- ds[1,c(1,3,4,5,6,7,8,9)]#
  dw2 <- t(as.data.frame(apply(ds[,10:19],MARGIN=2,median)))#
  dw3 <- cbind(ds1,ds2)#
  df <- rbind(df,ds3,dw3)#
}
head(df)
head(df0)
df0 <- read.table("data/RTDA_count.txt",header=T)[,1:19]#
df <- data.frame()#
for(i in unique(df0$ID)){#
  d <- df0[df0$ID==i,]#
  ds <- d[d$num==1 | d$num==2 |d$num==3,]#
  ds1 <- ds[1,c(1,3,4,5,6,7,8,9)]#
  ds2 <- t(as.data.frame(apply(ds[,10:19],MARGIN=2,median)))#
  ds3 <- cbind(ds1,ds2)#
  dw <- d[d$num==4 | d$num==5 |d$num==6,]#
  dw1 <- dw[1,c(1,3,4,5,6,7,8,9)]#
  dw2 <- t(as.data.frame(apply(dw[,10:19],MARGIN=2,median)))#
  dw3 <- cbind(dw1,dw2)#
  df <- rbind(df,ds3,dw3)#
}
head(df)
df$temperature <- rep(0, nrow(df))#
df$humidity <- rep(0, nrow(df))#
df[df$location=="Akita" & df$season=="S",]$temperature <- 25.0#
df[df$location=="Akita" & df$season=="S",]$humidity <- 76#
df[df$location=="Tokyo" & df$season=="S",]$temperature <- 28.1#
df[df$location=="Tokyo" & df$season=="S",]$humidity <- 77#
df[df$location=="Akita" & df$season=="W",]$temperature <- 2.7#
df[df$location=="Akita" & df$season=="W",]$humidity <- 75#
df[df$location=="Tokyo" & df$season=="W",]$temperature <- 8.3#
df[df$location=="Tokyo" & df$season=="W",]$humidity <- 61#
df2 <- data.frame()#
#
LM <- lm(corneo ~ m0_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 0-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ m0_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 0-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l0_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 0-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l0_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 0-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ m1_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 1-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ m1_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 1-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l1_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 1-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l1_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 1-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ components ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("number of connected components"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ holes ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("number of holes"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
#LM <- lm(TEWL ~ white_pixels ,data=df)#
#t <- summary(LM)$coefficients[2,3]#
#p <- summary(LM)$coefficients[2,4]#
#d <- data.frame(type=c("ratio of white pixels"), t_value = c(t), p_value=c(p))#
#df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ age ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("age"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ sex ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("sex"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ temperature ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("temperature"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ humidity ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("humidity"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
p_val <- df2$p_value#
#
FDR <- p.adjust(p_val, "BH")#
df2$FDR <- FDR#
#
df2$flag <- rep("g", nrow(df2))#
df2[df2$FDR < 0.01 & df2$t_value > 0,]$flag <- "r"#
df2[df2$FDR < 0.01 & df2$t_value < 0,]$flag <- "b"#
#write.table(df2, "~/Dropbox/KOSE201809/lm_eval2.txt" ,col.names=F,row.names=F,quote=F,sep="\t")#
#
df3 <- df2[order(df2$t_value,decreasing=T),]#
#
g <- ggplot(df3, aes(reorder(x = type, X = t_value, FUN = mean), y=t_value, fill=flag)) +#
  geom_bar(stat="identity", width = 0.5)+ #
  coord_flip() + #
  labs(x="", y="t value") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=16, family="Arial"), legend.position = 'none') +#
  geom_hline(yintercept = 0) + #
  scale_fill_manual(values = c("blue", "gray", "red"))
rm(list=ls())#
#
library(tidyr)#
library(dplyr)#
library(ggrepel)#
library(coefplot)#
#
df0 <- read.table("data/RTDA_count.txt",header=T)[,1:19]#
df <- data.frame()#
for(i in unique(df0$ID)){#
  d <- df0[df0$ID==i,]#
  ds <- d[d$num==1 | d$num==2 |d$num==3,]#
  ds1 <- ds[1,c(1,3,4,5,6,7,8,9)]#
  ds2 <- t(as.data.frame(apply(ds[,10:19],MARGIN=2,median)))#
  ds3 <- cbind(ds1,ds2)#
  dw <- d[d$num==4 | d$num==5 |d$num==6,]#
  dw1 <- dw[1,c(1,3,4,5,6,7,8,9)]#
  dw2 <- t(as.data.frame(apply(dw[,10:19],MARGIN=2,median)))#
  dw3 <- cbind(dw1,dw2)#
  df <- rbind(df,ds3,dw3)#
}
df$temperature <- rep(0, nrow(df))#
df$humidity <- rep(0, nrow(df))#
df[df$location=="Akita" & df$season=="S",]$temperature <- 25.0#
df[df$location=="Akita" & df$season=="S",]$humidity <- 76#
df[df$location=="Tokyo" & df$season=="S",]$temperature <- 28.1#
df[df$location=="Tokyo" & df$season=="S",]$humidity <- 77#
df[df$location=="Akita" & df$season=="W",]$temperature <- 2.7#
df[df$location=="Akita" & df$season=="W",]$humidity <- 75#
df[df$location=="Tokyo" & df$season=="W",]$temperature <- 8.3#
df[df$location=="Tokyo" & df$season=="W",]$humidity <- 61
head(df)
df[df$location=="Akita" & df$season=="S",]$temperature
df[df$location=="Akita" & df$season=="S",]$temperature <- 25.0
df$temperature <- rep(0, nrow(df))#
df$humidity <- rep(0, nrow(df))
head(df)
df[df$location=="Akita" & df$season=="S",]$temperature
df
df <- na.omit(df)
df
df$temperature <- rep(0, nrow(df))#
df$humidity <- rep(0, nrow(df))#
df[df$location=="Akita" & df$season=="S",]$temperature <- 25.0#
df[df$location=="Akita" & df$season=="S",]$humidity <- 76#
df[df$location=="Tokyo" & df$season=="S",]$temperature <- 28.1#
df[df$location=="Tokyo" & df$season=="S",]$humidity <- 77#
df[df$location=="Akita" & df$season=="W",]$temperature <- 2.7#
df[df$location=="Akita" & df$season=="W",]$humidity <- 75#
df[df$location=="Tokyo" & df$season=="W",]$temperature <- 8.3#
df[df$location=="Tokyo" & df$season=="W",]$humidity <- 61
df2 <- data.frame()#
#
LM <- lm(corneo ~ m0_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 0-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ m0_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 0-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l0_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 0-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l0_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 0-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ m1_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 1-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ m1_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 1-dim mid-life"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l1_mean ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("mean of 1-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ l1_sd ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("standard deviation of 1-dim life-time"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ components ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("number of connected components"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ holes ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("number of holes"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
#LM <- lm(TEWL ~ white_pixels ,data=df)#
#t <- summary(LM)$coefficients[2,3]#
#p <- summary(LM)$coefficients[2,4]#
#d <- data.frame(type=c("ratio of white pixels"), t_value = c(t), p_value=c(p))#
#df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ age ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("age"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ sex ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("sex"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ temperature ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("temperature"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
LM <- lm(corneo ~ humidity ,data=df)#
t <- summary(LM)$coefficients[2,3]#
p <- summary(LM)$coefficients[2,4]#
d <- data.frame(type=c("humidity"), t_value = c(t), p_value=c(p))#
df2 <- rbind(df2,d)#
#
p_val <- df2$p_value#
#
FDR <- p.adjust(p_val, "BH")#
df2$FDR <- FDR#
#
df2$flag <- rep("g", nrow(df2))#
df2[df2$FDR < 0.01 & df2$t_value > 0,]$flag <- "r"#
df2[df2$FDR < 0.01 & df2$t_value < 0,]$flag <- "b"#
#write.table(df2, "~/Dropbox/KOSE201809/lm_eval2.txt" ,col.names=F,row.names=F,quote=F,sep="\t")#
#
df3 <- df2[order(df2$t_value,decreasing=T),]#
#
g <- ggplot(df3, aes(reorder(x = type, X = t_value, FUN = mean), y=t_value, fill=flag)) +#
  geom_bar(stat="identity", width = 0.5)+ #
  coord_flip() + #
  labs(x="", y="t value") +#
  theme(panel.border = element_rect(fill = NA, size=1), #
    panel.background = element_rect(fill = NA,color = NA), #
    text=element_text(size=16, family="Arial"), legend.position = 'none') +#
  geom_hline(yintercept = 0) + #
  scale_fill_manual(values = c("blue", "gray", "red"))
g
rm(list=ls())#
#
library(caret)#
library(ggplot2)#
library(dplyr)#
#
obs_pred4 <- read.table("data/obs_pred_binary_wt_morph_sd1_corneo.txt",header=T)#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="0", replacement = "M")#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="1", replacement = "F")#
dA <- obs_pred4[obs_pred4$ID=="D-051" & obs_pred4$season=="S",]#
dB <- obs_pred4[obs_pred4$ID=="D-055" & obs_pred4$season=="S",]#
dC <- obs_pred4[obs_pred4$ID=="D-110" & obs_pred4$season=="S",]#
dD <- obs_pred4[obs_pred4$ID=="D-096" & obs_pred4$season=="W",]#
dE <- obs_pred4[obs_pred4$ID=="D-022" & obs_pred4$season=="S",]#
dF <- obs_pred4[obs_pred4$ID=="A-076" & obs_pred4$season=="W",]#
d1 <- rbind(dA, dB, dC, dD, dE, dF)#
d1$sym <- c("A", "B", "C", "D", "E", "F")#
g <- ggplot() + #
  geom_point(data=obs_pred4 , aes(x=pred, y=obs, color=sex), size=2) +#
  xlim(0,70) + ylim(0,70) +#
  labs(title="",x="Predicted TEWL", y="Observed TEWL") +#
#  scale_color_hue(name = "Location", labels = c(A = "Akita", T ="Tokyo"), guide=TRUE ) +#
 scale_color_hue(name = "sex", labels = c(F = "F", M ="M")) +#
#  scale_shape_discrete(name = "Sex", labels = c( W ="Female",M = "Male"), guide=guide_legend(reverse=TRUE) ) +#
#  scale_shape_discrete(name = "Season", labels = c(S="S", W="W" ), guide=TRUE ) +#
#  scale_shape_discrete(name = "Location", labels = c(A = "Akita", T ="Tokyo")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=25, family="Arial")) +#
  geom_abline(intercept=0,slope=1)　+ coord_fixed(ratio=1)
g2 <-g + geom_text(data=d1 , aes(x=pred, y=obs, label=sym), size=6)
g2
rm(list=ls())#
#
library(caret)#
library(ggplot2)#
library(dplyr)#
#
obs_pred4 <- read.table("data/oobs_pred_gray_nowt_sd1_skicon.txt",header=T)#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="0", replacement = "M")#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="1", replacement = "F")#
dA <- obs_pred4[obs_pred4$ID=="D-051" & obs_pred4$season=="S",]#
dB <- obs_pred4[obs_pred4$ID=="D-055" & obs_pred4$season=="S",]#
dC <- obs_pred4[obs_pred4$ID=="D-110" & obs_pred4$season=="S",]#
dD <- obs_pred4[obs_pred4$ID=="D-096" & obs_pred4$season=="W",]#
dE <- obs_pred4[obs_pred4$ID=="D-022" & obs_pred4$season=="S",]#
dF <- obs_pred4[obs_pred4$ID=="A-076" & obs_pred4$season=="W",]#
d1 <- rbind(dA, dB, dC, dD, dE, dF)#
d1$sym <- c("A", "B", "C", "D", "E", "F")#
g <- ggplot() + #
  geom_point(data=obs_pred4 , aes(x=pred, y=obs, color=sex), size=2) +#
  xlim(0,350) + ylim(0,350) +#
  labs(title="",x="Predicted TEWL", y="Observed TEWL") +#
#  scale_color_hue(name = "Location", labels = c(A = "Akita", T ="Tokyo"), guide=TRUE ) +#
 scale_color_hue(name = "sex", labels = c(F = "F", M ="M")) +#
#  scale_shape_discrete(name = "Sex", labels = c( W ="Female",M = "Male"), guide=guide_legend(reverse=TRUE) ) +#
#  scale_shape_discrete(name = "Season", labels = c(S="S", W="W" ), guide=TRUE ) +#
#  scale_shape_discrete(name = "Location", labels = c(A = "Akita", T ="Tokyo")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=25, family="Arial")) +#
  geom_abline(intercept=0,slope=1)　+ coord_fixed(ratio=1)#
g2 <-g + geom_text(data=d1 , aes(x=pred, y=obs, label=sym), size=6)
obs_pred4 <- read.table("data/obs_pred_gray_nowt_sd1_skicon.txt",header=T)
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="0", replacement = "M")#
obs_pred4["sex"] <- lapply(obs_pred4["sex"], gsub, pattern="1", replacement = "F")#
dA <- obs_pred4[obs_pred4$ID=="D-051" & obs_pred4$season=="S",]#
dB <- obs_pred4[obs_pred4$ID=="D-055" & obs_pred4$season=="S",]#
dC <- obs_pred4[obs_pred4$ID=="D-110" & obs_pred4$season=="S",]#
dD <- obs_pred4[obs_pred4$ID=="D-096" & obs_pred4$season=="W",]#
dE <- obs_pred4[obs_pred4$ID=="D-022" & obs_pred4$season=="S",]#
dF <- obs_pred4[obs_pred4$ID=="A-076" & obs_pred4$season=="W",]#
d1 <- rbind(dA, dB, dC, dD, dE, dF)#
d1$sym <- c("A", "B", "C", "D", "E", "F")#
g <- ggplot() + #
  geom_point(data=obs_pred4 , aes(x=pred, y=obs, color=sex), size=2) +#
  xlim(0,350) + ylim(0,350) +#
  labs(title="",x="Predicted TEWL", y="Observed TEWL") +#
 scale_color_hue(name = "sex", labels = c(F = "F", M ="M")) +#
  theme(panel.border = element_rect(fill = NA, size=1), #
  	panel.background = element_rect(fill = NA,color = NA), #
  	text=element_text(size=25, family="Arial")) +#
  geom_abline(intercept=0,slope=1)　+ coord_fixed(ratio=1)#
g2 <-g + geom_text(data=d1 , aes(x=pred, y=obs, label=sym), size=6)
g2
